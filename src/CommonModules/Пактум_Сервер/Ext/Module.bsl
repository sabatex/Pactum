
&Вместо("Авторизация_Пактум")
Функция БА_ПА_Авторизация_Пактум()
	НастройкиПодключения=ПолучитьНастройкиПодключения();
	
	result=Новый Структура;
	result.Вставить("Результат", Ложь);
	result.Вставить("Токен");
	
	Если СокрЛП(НастройкиПодключения.Логин)="" Тогда
		Индикатор1 = 0;
		Возврат result;
	КонецЕсли;
	
	params = new Map;
	params.Insert("UserName",СокрЛП(НастройкиПодключения.Логин));
	params.Insert("Password",СокрЛП(НастройкиПодключения.Логин));
	
	headers = new Map;
	headers.Insert("Accept-Language", "ru");
	headers.Insert("Accept-Charset","utf-8");
	headers.Insert("Content-Language", "ru");
	headers.Insert("Content-Charset", "utf-8");
	headers.Insert("Content-type", "application/x-www-form-urlencoded; charset=utf-8");

	host = "pactumsys.com";
	url = "/api/v1/cba2911c-01f9-4ca7-833a-46fb0cc079f2/accounts/authentication";
	response = sabataexWebApi.HTTPSPostForm(host,,url,headers,params);
	
	if response.КодСостояния >299 then
		Индикатор1 = 0;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сервер недоступний. Перевірте підключення до мережі Інтернет.");
		return result;
	endif;	
	
	ТекстОтвета = response.GetBodyAsString();
		
		Если Найти(ТекстОтвета,"Пинкод указан не верно" )=0 тогда
			ЧтениеJSON = Новый ЧтениеJSON;	
			ЧтениеJSON.УстановитьСтроку(ТекстОтвета);
			СтрТокен = ПрочитатьJSON (ЧтениеJSON);	
			Если Не СтрТокен = Неопределено Тогда
				Если СтрТокен.Свойство("access_token") Тогда
					стрПактум_Токен = СтрТокен.access_token;
					СтруДанныеДепозит=Депозит_Пактум(стрПактум_Токен);
					result.Вставить("Токен", стрПактум_Токен);
					result.Вставить("Депозит", СтруДанныеДепозит.Депозит);
					result.Вставить("ДатаСтарт", СтруДанныеДепозит.ДатаСтарт);
					result.Вставить("ДатаКонец", СтруДанныеДепозит.ДатаКонец);
					result.Вставить("Результат", Истина);
				КонецЕсли;
			КонецЕсли;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Пинкод указан не верно';uk= 'Пінкод вказаний не вірно'"));
		КонецЕсли;
	
	Возврат result;
КонецФункции

&Вместо("ПроверкаКорректностиЕДРПОУ_Пактум")
Функция БА_ПА_ПроверкаКорректностиЕДРПОУ_Пактум(КодЕДРПОУ)
	НастройкиПодключения=ПолучитьНастройкиПодключения();
	
	result = Авторизация_Пактум();
	result.Вставить("КорректностьЕДРПОУ_Значение", Ложь);
	result.Вставить("КорректностьЕДРПОУ_ТекстОшибки", "");
	
	params = new Map;
	params.Insert("source","1c;skipRegisters=2,3");
	
	headers = new Map;
	headers.Insert("Accept-Language", "ru");
	headers.Insert("Accept-Charset","utf-8");
	headers.Insert("Content-Language", "ru");
	headers.Insert("Content-Charset", "utf-8");
	headers.Insert("Authorization", "Bearer "+result.Токен);
	headers.Insert("Content-type", "application/x-www-form-urlencoded; charset=utf-8");

	host = "pactumsys.com";
	url = "/api/v1/cba2911c-01f9-4ca7-833a-46fb0cc079f2/contractors/"+КодЕДРПОУ;
	
	try
		response = sabataexWebApi.HTTPSGet(host,,url,params,headers);
		if response.КодСостояния >299 then
			raise "";
		endif;	
		ТекстОтвета = response.GetBodyAsString();
			
		ЧтениеJSON = Новый ЧтениеJSON; 
		ЧтениеJSON.УстановитьСтроку(ТекстОтвета);
		Контрагент = ПрочитатьJSON (ЧтениеJSON);	
	
		Если Контрагент.Свойство("Status") Тогда
			result.Вставить("КорректностьЕДРПОУ_Значение", Истина);
		Иначе
			result.Вставить("КорректностьЕДРПОУ_Значение", Ложь);
			Если Контрагент.Message = "Request not authenticated" Тогда
				ТекстОшибки = НСтр("ru='Для автоматизированного заполнения карточки контрагента в соответствии с введенным кодом ЕГРПОУ (ГРФЛ) подключите сервис Пактум.Контрагент: https://portal.bas-soft.eu/applications/76';uk= 'Для автоматизованого заповнення картки контрагента відповідно до введеного коду ЄДРПОУ (ДРФО) підключіть сервіс Пактум.Контрагент: https://portal.bas-soft.eu/applications/76'");
			Иначе
				ТекстОшибки = Контрагент.Message;
			КонецЕсли;
			result.Вставить("КорректностьЕДРПОУ_ТекстОшибки", ТекстОшибки);
		КонецЕсли;

	except
		result.КорректностьЕДРПОУ_ТекстОшибки ="Сервер недоступний. Перевірте підключення до мережі Інтернет.";
		return result;
	endtry;
	
	
	return result;
КонецФункции

&Вместо("Депозит_Пактум")
Функция БА_ПА_Депозит_Пактум(Токен)
	headers = new Map;
	headers.Insert("Accept-Language", "ru");
	headers.Insert("Accept-Charset","utf-8");
	headers.Insert("Content-Language", "ru");
	headers.Insert("Content-Charset", "utf-8");
	headers.Insert("Content-type", "application/x-www-form-urlencoded; charset=utf-8");
	headers.Insert("Authorization", "Bearer "+Токен);

	host = "pactumsys.com";
	url = "/api/v1/cba2911c-01f9-4ca7-833a-46fb0cc079f2/accounts/profile";
	
	response = sabataexWebApi.HTTPSPostForm(host,,url,headers);
	ТекстОтвета = response.GetBodyAsString();
						

	СуммаДепозита=0;
	Попытка
		ЧтениеJSON=Новый ЧтениеJSON;	
		ЧтениеJSON.УстановитьСтроку(ТекстОтвета);
		СтрТокен = ПрочитатьJSON(ЧтениеJSON);	
		пСумма=0; ДатаСтарт=0; ДатаКонец=0;
		Мас=СтрТокен.Subscriptions;
		Для Каждого Эл Из Мас Цикл
			Если Не Эл.AllowToUse Тогда
				Продолжить;
			КонецЕсли;
			Попытка
				пСумма1=Эл.RequestsLimit;
				Если пСумма1=Неопределено Тогда
					пСумма1=0;
				КонецЕсли;
			Исключение
				пСумма1=0;
			КонецПопытки;
			Попытка
				пСумма2=Эл.TotalUsage;
				Если пСумма2=Неопределено Тогда
					пСумма2=0;
				КонецЕсли;
			Исключение
				пСумма2=0;
			КонецПопытки;
			пСумма=пСумма+пСумма1-пСумма2;
			
			Попытка
				Если Не Эл.StartDate=Неопределено Тогда
					ДатаСтарт=Эл.StartDate;
				КонецЕсли;
			Исключение
			КонецПопытки;
			
			Попытка
				Если Не Эл.EndDate=Неопределено Тогда
					ДатаКонец=Эл.EndDate;
				КонецЕсли;
			Исключение
			КонецПопытки;

		КонецЦикла;
		СуммаДепозита=пСумма;
	Исключение
	КонецПопытки;
	
	Стру=Новый Структура;
	Стру.Вставить("Депозит", СуммаДепозита);
	Стру.Вставить("ДатаСтарт", ДатаСтарт);
	Стру.Вставить("ДатаКонец", ДатаКонец);
	Возврат Стру;

КонецФункции

&Вместо("ИспользованиеСервисаВозможно")
Функция БА_ПА_ИспользованиеСервисаВозможно()
	// Вставити вміст методу.
	ИспользованиеВозможно = Истина;
	Если ОбщегоНазначения.РазделениеВключено() Тогда 
		// еще не адаптирован для работы в режиме сервиса
		ИспользованиеВозможно = Ложь;
	КонецЕсли;
	
	Возврат ИспользованиеВозможно;
КонецФункции
